# src/reranker.py
from sentence_transformers import CrossEncoder
from src.config import RERANK_MODEL   # ‚úÖ l·∫•y model t·ª´ config.py

print(f"[reranker] üöÄ Using re-ranker model: {RERANK_MODEL}")
reranker = CrossEncoder(RERANK_MODEL)


def rerank(query, docs, top_n=3, return_scores=False):
    """
    Re-rank c√°c documents d·ª±a tr√™n ƒë·ªô li√™n quan v·ªõi query.
    - query: c√¢u h·ªèi g·ªëc
    - docs: list[Document] t·ª´ vector store
    - top_n: s·ªë l∆∞·ª£ng doc mu·ªën gi·ªØ l·∫°i
    - return_scores: n·∫øu True -> tr·∫£ v·ªÅ [(doc, score)], ng∆∞·ª£c l·∫°i -> ch·ªâ tr·∫£ v·ªÅ [doc]
    """
    if not docs:
        return [] if return_scores else []
    
    pairs = [(query, d.page_content) for d in docs]
    scores = reranker.predict(pairs)

    scored = list(zip(docs, scores))
    scored = sorted(scored, key=lambda x: x[1], reverse=True)

    if return_scores:
        return scored[:top_n]
    return [d for d, _ in scored[:top_n]]
